LINEAR REGRESSION

import numpy as np
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

# Data
age = np.array([25,25,25,25,25,25,25,25,25,
                32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                37,37,37,37,37,37,37,37,37,37,37,37,
                42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,
                47,47,47,47,47,47,47,47,47,47,47,47,47,47,
                52,52,52,52,52,52,52,52,
                57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,
                62,62,62,62,62,62,62,62,62,62])
chd = np.array([0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,1,0,0,1,1,0,1,0,1,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,1,1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1])

print(len(age),len(chd))
# Reshape age for sklearn
age = age.reshape(-1, 1)

# Create and fit the model
model = LinearRegression()
model.fit(age, chd)

# Get the parameters
w0 = model.intercept_
w1 = model.coef_[0]

print(f"Parameters of the model: w0 = {w0:.4f}, w1 = {w1:.4f}")

OUTPUT:
100 100
Parameters of the model: w0 = -0.5082, w1 = 0.0202


2.

# Predicted values
predicted_chd = model.predict(age)

# Scatter plot
plt.scatter(age, chd, label='Original Data')
plt.plot(age, predicted_chd, color='red', label='Linear Model')
plt.xlabel('Age')
plt.ylabel('Coronary Heart Disease (CHD)')
plt.legend()
plt.show()

OUTPUT: graph


4.
age_41 = np.array([[41]])  # Reshape for sklearn
predicted_prob_41 = model.predict(age_41)

print(f"The model predicts a probability of {predicted_prob_41[0]:.4f} for someone who is 41 years old.")

OUTPUT:
The model predicts a probability of 0.3208 for someone who is 41 years old.

3.

from sklearn.linear_model import LinearRegression

# Given data
X = [
    [14.620, 226.000, 7.000],
    [15.630, 220.000, 3.375],
    [14.620, 217.400, 6.375],
    [15.000, 220.000, 6.000],
    [14.500, 226.500, 7.625],
    [15.250, 224.100, 6.000],
    [16.120, 220.500, 3.375],
    [15.130, 223.500, 6.125],
    [15.500, 217.600, 5.000],
    [15.130, 228.500, 6.625],
    [15.500, 230.200, 5.750],
    [16.120, 226.500, 3.750],
    [15.130, 226.600, 6.125],
    [15.630, 225.600, 5.375],
    [14.620, 223.700, 7.375],
    [15.500, 230.000, 4.000],
    [14.250, 224.300, 8.000],
    [14.500, 240.500, 10.870],
    [14.620, 217.400, 6.375],
    [15.380, 229.700, 5.875]
]

y = [128.400, 97.520, 52.620, 98.010, 139.900, 102.600, 48.140, 109.600, 82.680, 112.600, 97.520, 59.060, 111.800, 89.090, 133.400, 66.800, 157.100, 208.400, 113.900, 101.000]

# Create and fit the model
model = LinearRegression()
model.fit(X, y)

# Get the coefficients
coefficients = model.coef_
intercept = model.intercept_

print(f"Coefficients: {coefficients}")
print(f"Intercept: {intercept}")


OUTPUT:

Coefficients: [-10.80154674   1.47173683  13.82944975]
Intercept: -145.68706569825923
4.

# Define the values for prediction
x1 = 14.5
x2 = 220
x3 = 5.0

# Make the prediction
predicted_hfe = model.predict([[x1, x2, x3]])
print(f"Predicted HFE: {predicted_hfe[0]}")

OUTPUT:

Predicted HFE: 90.6198585843307




